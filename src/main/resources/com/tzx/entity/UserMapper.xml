<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tzx.dao.UserDao">
    <!--
        配置实体类和数据库字段对应
        当实体类和数据库字段不对应时可通过这种配置（或者查询时使用 as）
        配置了此参数后查询的返回值要使用resultMap
     -->
    <resultMap id="myResultMap" type="user">
        <!-- 主键对应字段 -->
        <id property="userid" column="userid"/>
        <!-- 非主键对应字段 -->
        <result property="username" column="username"/>
    </resultMap>

    <select id="findAllUser" resultType="user">
        select * from user
    </select>

    <insert id="saveUser" parameterType="user">
        <!-- keyProperty表示返回值名称 order表示在之前还是之后执行 resultType表示返回值累心 -->
        <selectKey keyProperty="userid" resultType="Integer" keyColumn="userId">
            select last_insert_id();
        </selectKey>
        insert into user(username,userpassword,useremail)values(#{username},#{userpassword},#{useremail})
    </insert>

    <update id="updateUser" parameterType="user">
        update user set username=#{username} where userid=#{userid}
    </update>

    <delete id="deleteUser" parameterType="user">
        delete from user where userid=#{userid}
    </delete>

    <select id="findOneUser" resultType="user" parameterType="Integer">
        select username from user where userid=#{uid}
    </select>

    <select id="finOneUserByLike" resultType="user" parameterType="String">
        select * from user where username like #{username}
        <!--
            此种方法是使用Statement直接拼接字符串得到语句 ，不建议使用
          select * from user where username like '%${value}%'
          -->
      </select>
  </mapper>